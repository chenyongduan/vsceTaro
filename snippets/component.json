{
  "create function component": {
    "prefix": "fc",
    "body": [
      "import Taro, { FunctionComponent } from '@tarojs/taro';",
      "",
      "interface OwnProps {}",
      "",
      "type Props = OwnProps;",
      "",
      "const ${TM_FILENAME_BASE}: FunctionComponent<Props> = (props) => {",
      "  $0",
      "  return ();",
      "};",
      "",
      "export default ${TM_FILENAME_BASE};",
      ""
    ]
  },
  "pure component": {
    "prefix": "rcc",
    "body": [
      "import Taro, { PureComponent } from '@tarojs/taro';",
      "",
      "interface OwnProps {}",
      "",
      "type Props = OwnProps;",
      "",
      "class ${TM_FILENAME_BASE} extends PureComponent<Props> {",
      "  render() {",
      "    return (",
      "      $0",
      "    );",
      "  }",
      "}",
      "",
      "export default ${TM_FILENAME_BASE};"
    ]
  },
  "pure component with state": {
    "prefix": "rccs",
    "body": [
      "import Taro, { PureComponent } from '@tarojs/taro';",
      "",
      "interface OwnProps {}",
      "",
      "type Props = OwnProps;",
      "",
      "type State = Readonly<{",
      "  $1",
      "}>;",
      "",
      "class ${TM_FILENAME_BASE} extends PureComponent<Props, State> {",
      "  readonly state: State = {",
      "    $2",
      "  };",
      "",
      "  render() {",
      "    return (",
      "      $0",
      "    );",
      "  }",
      "}",
      "",
      "export default ${TM_FILENAME_BASE};"
    ]
  },
  "pure component with @tarojs/redux": {
    "prefix": "rrc",
    "body": [
      "import Taro, { PureComponent } from '@tarojs/taro';",
      "import { connect } from '@tarojs/redux';",
      "",
      "interface OwnProps {}",
      "",
      "type Props = OwnProps & ReturnType<typeof mapStateToProps> & typeof mapDispatchToProps;",
      "",
      "class ${TM_FILENAME_BASE} extends PureComponent<Props> {",
      "  render() {",
      "    return (",
      "      $0",
      "    );",
      "  }",
      "}",
      "",
      "const mapStateToProps = (state: RootState) => {",
      "  return {};",
      "};",
      "",
      "const mapDispatchToProps = {};",
      "",
      "export default connect(mapStateToProps, mapDispatchToProps)(${TM_FILENAME_BASE});"
    ]
  },
  "pure component with @tarojs/redux and state": {
    "prefix": "rrcs",
    "body": [
      "import Taro, { PureComponent } from '@tarojs/taro';",
      "import { connect } from '@tarojs/redux';",
      "",
      "interface OwnProps {}",
      "",
      "type Props = OwnProps & ReturnType<typeof mapStateToProps> & typeof mapDispatchToProps;",
      "",
      "type State = Readonly<{}>;",
      "",
      "class ${TM_FILENAME_BASE} extends PureComponent<Props, State> {",
      "  readonly state: State = {};",
      "",
      "  render() {",
      "    return (",
      "      $0",
      "    );",
      "  }",
      "}",
      "",
      "const mapStateToProps = (state: RootState) => {",
      "  return {};",
      "};",
      "",
      "const mapDispatchToProps = {};",
      "",
      "export default connect(mapStateToProps, mapDispatchToProps)(${TM_FILENAME_BASE});"
    ]
  }
}